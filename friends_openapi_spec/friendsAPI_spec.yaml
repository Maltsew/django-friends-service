openapi: 3.1.0
info:
  title: Django сервис друзей
  description: |-
    Проектирование сервиса "друзей".
    Сервис должен предоставлять возможности:
      1) Зарегистрировать нового пользователя.
      2) Отправить пользователю заявку в друзья
      3) Принять/отклонить заявку в друзья от другого пользователя
      4) Посмотреть список своих исходящих и входящих заявок в друзья
      5) Посмотреть список своих друзей
      6) Получить статус дружбы с другим пользователем (нет ничего/есть исходящая заявка/есть входящая заявка/уже друзья)
      7) Удалить из друзей
      8) Если пользователь 1 отправляет заявку пользователю 2, а пользователь 2 отправляет заявку пользователю 1 они автоматически становятся друзьями
  version: 0.0.1
servers:
  - url: https://localhost:8080/api/v1
paths:
  /users:
    post:
      summary: Регистрация нового пользователя
      operationId: createUser
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
      responses:
        '201':
          description: Успешная регистрация нового пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default: 
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /friends:
    get:
      summary: Получить список друзей пользователя
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Friendship'
        default: 
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    UserRegistrationRequest:
      type: object
      properties:
        username:
          type: string
          description: username
      required:
        - username
    User:
      type: object
      properties:
        id:
          type: integer
          description: id of current user
        username:
          type: string
          description: username of the user
    Error:
      type: object
      required: 
        - code
        - message
      properties: 
        code:
          type: integer
        message:
          type: string
    Friendship:
      type: object
      properties:
        id:
          type: integer
          description: ID of the friendship
        user_id:
          type: integer
          description: ID of the user who sent the request
        friend_id:
          type: integer
          description: ID of the friend added
        message:
          type: string
          description: Optional message sent to the friend